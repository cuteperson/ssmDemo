//已申请和未申请
var isApply = [
    { name: "请选择", value: '' },
    { name: "已申请", value: 1 },
    { name: "未申请", value: 0 },
];
//是否推荐
var isRecommend = [
    { name: "请选择", value: '' },
    { name: "已推荐", value: 1 },
    { name: "未推荐", value: 0 },
];

//使用时value减少2
var sh = [
    { name: "全部", value: 0 },
    { name: "审核不通过", value: 1, css: "txt_red" },
    { name: "等待审核", value: 2, css: "txt_yellow" },
    { name: "等待指导教师审核", value: 5, css: "txt_yellow" },
    { name: "等待专业负责人审核", value: 6, css: "txt_yellow" },
    { name: "等待教学秘书审核", value: 7, css: "txt_yellow" },
    { name: "等待院长审核", value: 8, css: "txt_yellow" },
    { name: "等待管理员审核", value: 1002, css: "txt_yellow" },
    { name: "不审核", value: 1003, css: "" },
    { name: "审核通过", value: 3, css: "txt_green" }
];
//答疑安排星期
var dyxq = [
    { name: "请选择", value: '' },
    { name: "星期一", value: 1 },
    { name: "星期二", value: 2 },
    { name: "星期三", value: 3 },
    { name: "星期四", value: 4 },
    { name: "星期五", value: 5 },
    { name: "星期六", value: 6 },
    { name: "星期日", value: 7 },
];

var xzms = [
    { name: "全部", value: 0 },
    { name: "师生互选课题", value: 1 },
    { name: "指定学生课题", value: 2 },
    { name: "学生申报课题", value: 3 },
    { name: "团队课题", value: 4 }];

//1学生提交0教师提交
var taskstatic = [
    { name: "全部", value: "all", "selected": true },
    { name: "学生提交", value: "2" },
    { name: "教师提交", value: "1" },
    { name: "未提交", value: "0" }
];

//下发状态  1下发0未下发
var Taskxf = [
    { name: "全部", value: "all", "selected": true },
    { name: "已下发", value: "1" },
    { name: "未下发", value: "0" }
];

//审核状态   0z未审核,1审核通过,-1审核不通过
var Auditor = [
    { name: "全部", value: "", "selected": true },
    { name: "未审核", value: "0" },
    { name: "审核通过", value: "1" },
    { name: "审核不通过", value: "-1" }
];

// 委托状态 0为委托1已委托all全部
var entrust_state = [
        { name: "全部", value: "", "selected": true },
        { name: "未分配", value: "0" },
        { name: "已分配", value: "1" }
];

//使用时value减少2
var student_state = [
    { name: "全部", value: 0 },
    { name: "启用", value: 2 },
    { name: "暂停", value: 1 }];
// 角色
//-1:全部;6:院长;5:教学秘书;4:专业负责人;3:指导教师;8:督导专家;9:评阅专家;
// 使用时 value - 1
var teacher_role = [
    { name: "全部", value: 0 },
    { name: "院长", value: 7 },
    { name: "教学秘书", value: 6 },
    { name: "专业负责人", value: 5 },
    { name: "指导教师", value: 4 },
    { name: "督导专家", value: 9 },
    { name: "评阅专家", value: 10 }
];

// 教师类型
//1:兼职;2:全职
var teacher_type = [
    { name: "请选择", value: 0 },
    { name: "全职", value: 2 },
    { name: "兼职", value: 3 }
];
// 课题全责 已确定和未确定
var project_select = [
    { name: "请选择", value: 0 },
    { name: "已确定双选", value: 1 },
    { name: "等待确认过程中", value: 2 },
    { name: "未进行或未通过双选", value: 3 }
];
//学年模块  -1
var school_year = [
    { name: "请选择", value: 0 },
    { name: "申报课题", value: 1 },
    { name: "学生选题", value: 9 },
    { name: "提交任务书", value: 10 },
    { name: "提交开题报告", value: 2 },
    { name: "提交中期检查", value: 3 },
    { name: "提交指导记录", value: 5 },
    { name: "提交文献综述", value: 6 },
    { name: "提交外文译文", value: 7 },
    { name: "提交毕设论文", value: 4 },
    { name: "评审和答辩", value: 8 }
];

//导出文档类型 
var Export_type = [
    { name: "无需导出", value: -1 },
    { name: "WORD", value: 0 },
    { name: "PDF", value: 1 },
    { name: "WORD和PDF", value: 2 }
];

var Special_Type = [
    { name: "请选择", value: 0 },
    { name: "文科", value: 1 },
    { name: "理工科", value: 2 }
];
// 申报人角色
var declarant_role = [
    { name: "全部", value: "all", "selected": true },
    { name: "教师", value: 1 },
    { name: "学生", value: 0 }
];
//提交状态
var submitState = [
    { name: "全部", value: "all", "selected": true },
    { name: "未提交", value: 0 },
    { name: "已提交", value: 1 }
];
//审核状态
var auditor = [
    { name: "全部", value: "all", "selected": true },
    { name: "审核通过", value: 1 },
    { name: "等待审核", value: 0 },
    { name: "审核不通过", value: -1 }
];
//答辩成绩切换
var dbcj = [
    { name: "全部", value: "0", "selected": true },
    { name: "一辩成绩", value: 1 },
    { name: "二辩成绩", value: 2 }
];
//是否分配评阅专家
var pyzj = [
    { name: "全部", value: "-1", "selected": true },
    { name: "无评阅专家", value: 0 },
    { name: "已经安排评阅专家", value: 1 }
];
//学科门类/学位类型
var Special_DisciplineGenre = [
    { name: "请选择", value: 0 },
    { name: "哲学", value: 1 },
    { name: "经济学", value: 2 },
    { name: "法学", value: 3 },
    { name: "教育学", value: 4 },
    { name: "文学", value: 5 },
    { name: "历史学", value: 6 },
    { name: "理学", value: 7 },
    { name: "工学", value: 8 },
    { name: "农学", value: 9 },
    { name: "医学", value: 10 },
    { name: "军事学", value: 11 },
    { name: "管理学", value: 12 },
    { name: "艺术学", value: 13 }
];


// 成绩（指导、评阅、专家）
var answer_grade = [
    { name: "请选择", value: -1, "selected": true },
    { name: " >=60 ", value: 1 },
    { name: " >=70 ", value: 2 },
    { name: " >=80 ", value: 3 },
    { name: " >=90 ", value: 4 }
];
// 复制比
var answer_reproduction_ratio = [
    { name: "请选择", value: -1, "selected": true },
    { name: " <= 5% ", value: 1 },
    { name: " <= 10% ", value: 2 },
    { name: " <= 15% ", value: 3 },
    { name: " <= 20% ", value: 4 },
    { name: " <= 25% ", value: 5 },
    { name: " <= 30% ", value: 6 },
    { name: " <= 35% ", value: 7 },
    { name: " <= 40% ", value: 8 },
    { name: " <= 45% ", value: 9 },
    { name: " <= 50% ", value: 10 }
];

//登录前使用
function school_init() {
    var rs = false;
    $.ajax({
        url: "../Handler/LoginHandler.ashx",
        data: { "action": "imgurl" },
        async: false,
        dataType: "json",
        type: "POST",
        success: function (data) {
            $("#wait_main").hide();
            if (data.isSuccess) {
                //学校名称和学校logo显示与否
                if (data.rows[0]["是否显示学校名称"] == 0 || checkValIsUndefinedOrNull(data.rows[0]["学校名称"])) {
                    $("#school_name").hide();
                } else {
                    $("#school_name").show();
                    $("#school_name").text(data.rows[0]["学校名称"]);
                }
                if (!checkValIsUndefinedOrNull(data.rows[0]["是否显示校徽"]) && data.rows[0]["是否显示校徽"] == 0) {
                    $("#school_logo").hide();
                } else {
                    $("#school_logo").show();
                    if (data.rows[0]["图片路径"]) {
                        $("#school_logo").attr("src", data.rows[0]["图片路径"]);
                    } else {
                        $("#school_logo").attr("src", 'Themes/default/images/loginLogo.png');
                    }
                }

                if (data.rows[0]["系统名称"]) {
                    $("#xtmc").text(data.rows[0]["系统名称"]);
                    document.title = data.rows[0]["系统名称"];
                };
                $("#xtmc").show();
                $("#login_main").removeAttr("style");
                rs = true;
            } else {
                if (data.total == 0) {
                    $("#no_main").show();
                    $("body").attr("style", "background-color:#daeff4;");
                };
            };
        },
        error: function (err) {
            console.log(err);
        }
    });
    return rs;
};

var cur_role_id = "";
//登录后调用
function school_load(show) {
    if (show == undefined) {
        show = true;
    };
    $.ajax({
        url: "../Handler/UserHandler.ashx",
        data: { "action": "GetUserRoleName" },
        async: false,
        dataType: "json",
        type: "POST",
        success: function (data) {
            if (data.isSuccess) {
                if (show) {
                    //用户信息
                    var userInfo = data.dataList.userInfo;
                    if (!checkValIsUndefinedOrNull(userInfo[0]["是否显示校徽"]) && userInfo[0]["是否显示校徽"] == 0) {
                        $("#school_logo").hide();
                    } else {
                        $("#school_logo").show();
                        if (userInfo[0]["图片"]) {
                            $("#school_logo").attr("src", userInfo[0]["图片"]);
                        } else {
                            $("#school_logo").attr("src", 'Themes/default/images/loginLogo.png');
                        }
                    }
                    if (userInfo[0]["是否显示学校名称"] == 0 || checkValIsUndefinedOrNull(userInfo[0]["学校名称"])) {
                        $("#school_name").hide();
                    } else {
                        $("#school_name").show();
                        $("#school_name").text(userInfo[0]["学校名称"]);
                        if (userInfo[0]["是否显示校徽"] == 0) {
                            $("#school_name").parent().css("margin-left", "25px");
                        }
                    }
                    if (userInfo[0]["系统名称"]) {
                        $("#R_xtmc").show();
                        $("#R_xtmc").text(userInfo[0]["系统名称"]);
                        document.title = userInfo[0]["系统名称"];
                    };
                    //是否显示写作助手
                    if (userInfo[0]["开通写作助手"] == 1) {
                        $("#writingHelper").show();
                    } else {
                        $("#writingHelper").hide();
                    };
                    $(".role_name").text(userInfo[0]["角色名称"]);
                    if (!checkValIsUndefinedOrNull(userInfo[0]["姓名"])) {
                        $("#user_name").text(userInfo[0]["姓名"] + "(" + userInfo[0]["用户名"] + ")");
                    } else {
                        $("#user_name").text(userInfo[0]["用户名"]);
                    };

                    $("#plan_name").text(userInfo[0]["学年"]);

                    cur_role_id = userInfo[0]["角色ID"];
                    $.cookie("cur_role_id", userInfo[0]["角色ID"]);
                    if (userInfo[0]["角色ID"] == "1") {
                        var show_title = $("#show_title");
                        if (show_title != null && show_title != undefined) {
                            show_title.text("选择学年");
                        };
                    } else if (userInfo[0]["角色ID"] == "2") {
                        var show_title = $("#show_title");
                        if (show_title != null && show_title != undefined) {
                            show_title.text("选择专业");
                        };
                        $("#school_year_select").hide();
                    };

                    //全部自定义角色
                    var userDefinedRoles = [];
                    var roleTypes = data.dataList.roleTypes;
                    if (roleTypes && roleTypes.length > 0) {
                        $.each(roleTypes, function (index, item) {
                            if (!checkValIsUndefinedOrNull(item.名称) && !checkValIsUndefinedOrNull(item.自定义编号)) {
                                var role = {};
                                role["name"] = item.名称;
                                role["value"] = item.自定义编号;
                                if ($.inArray(role, userDefinedRoles) < 0) {
                                    userDefinedRoles.push(role);
                                };
                            };
                        });
                    };
                    try {
                        var rolesText = JSON.stringify(userDefinedRoles);
                        $("#hdUserDefinedRoles").val(rolesText);
                    } catch (e) { }
                };
            };
        },
        error: function (err) {
            console.log(err);
        }
    });
};

/**
 * 获取所有用户自定义角色，school_load()赋值
 * [{name,value}]
 */
function getUserDefinedRoles() {
    if (window.parent.getUserDefinedRoles) {
        return window.parent.getUserDefinedRoles();
    } else {
        return [];
    };
};

/**
 * 获取自动登录信息
 */
function getRsaAutoLogin() {
    return "";
    var authToken = getAuthToken();
    if (authToken == undefined || typeof (authToken) == "undefined") {
        authToken = "undefined";
    } else if (authToken == null) {
        authToken = "null";
    }

    var autoLoginInfo = localStorage["CO2017_AutoLogin"];
    if (autoLoginInfo == undefined || typeof (autoLoginInfo) == "undefined") {
        autoLoginInfo = "undefined";
    } else if (autoLoginInfo == null) {
        autoLoginInfo = "null";
    }

    var dateTime = (new Date()).getTime();

    var autoLogin = {
        authToken: authToken,
        autoLoginInfo: autoLoginInfo,
        dateTime: dateTime, // Thu Jan 01 2099 22:35:35 GMT+0800 (中国标准时间) | 4070961335280  
        random: "V1.1"
    };
    var publicKey = localStorage["CO2017_RsaPublicKey"] || "";
    var rsa = rsaEncryptWithChar(autoLogin, publicKey);
    rsa = encodeURIComponent(rsa);
    return rsa;
}

/**
 * AutoLoginId
 * */
function getRsaAutoLoginId() {
    return "";
    var lid = $.cookie("CO2017_AutoLoginId") || "undefined";
    if (!checkValIsUndefinedOrNull(lid)) {
        lid = encodeURIComponent(lid);
    }
    return lid;
};

/**
 * 获取AuthToken
 */
function getAuthToken() {
    var token = "";
    if (window.parent.getAuthTokenInMain) {
        token = window.parent.getAuthTokenInMain();
    };
    return token;
};

/**
 * 设置AuthToken
 * @param {String} element 元素ID
 */
function setAuthToken(element) {
    $("#" + element).val("");
    $.ajax({
        url: "../Handler/UserHandler.ashx",
        type: "post",
        data: { action: "GetAuthToken" },
        dataType: "json",
        async: false
    }).done(function (data) {
        if (data.isSuccess) {
            var $authToken = $("#" + element);
            if ($authToken) {
                $authToken.val(data.dataList.authToken);
            }
            //localStorage["CO2017_AutoLogin"] = data.dataList.autoLogin;
            localStorage["CO2017_RsaPublicKey"] = data.dataList.rsaPublicKey;
            // cookie:"CO2017_AutoLoginId"
        }
    }).fail(function (err) {
        if (console && console.error) {
            console.error(err);
        }
    });
}

function get_current_role() {
    if (!checkValIsUndefinedOrNull($.cookie("cur_role_id"))) {
        return $.cookie("cur_role_id");
    } else {
        school_load();
        return $.cookie("cur_role_id");
    };
};


function project_openframe() {
    var role = get_current_role();
    close_loading();
    if (role == "3") {
        //refreshTab('教师申报课题');
        reloadTable('教师申报课题', 'list');
        closeTab('课题详细信息', getUrlParam('id'));
        closeTab('添加课题', getUrlParam('id'));
        closeTab('修改课题', getUrlParam('id'));
    } else if (role == "2") {
        //refreshTab('学生申报课题');
        reloadTable('学生申报课题', 'list');
        refreshTab('首页');
        closeTab('课题详细信息', getUrlParam('id'));
        closeTab('录入课题', getUrlParam('id'));
        closeTab('修改课题', getUrlParam('id'));
    } else {
        //refreshTab('查看课题信息');
        //refreshTab('课题详细信息');
        reloadTable('查看课题信息', 'list');
        closeTab('课题详细信息', getUrlParam('id'));
        closeTab('添加课题', getUrlParam('id'));
        closeTab('修改课题', getUrlParam('id'));
    };
};


function task_openframe() {
    var role = get_current_role();
    if (role == "3") {
        reloadTable('提交和下发任务书', 'list');
        closeTab('任务书详细信息', getUrlParam('id'));
        closeTab('提交任务书', getUrlParam('id'));
        closeTab('修改任务书', getUrlParam('id'));
    } else if (role == "2") {
        refreshTab('首页');
        refreshTab('任务书信息');
        closeTab('查看任务书');
        closeTab('修改任务书');
    } else {
        reloadTable('查看任务书', 'list');
        closeTab('任务书详细信息', getUrlParam('id'));
        closeTab('提交任务书', getUrlParam('id'));
        closeTab('修改任务书', getUrlParam('id'));
    };
};

function system_quit() {
    $.ajax({
        url: "../Handler/UserHandler.ashx",
        data: { "action": "ExitSystem" },
        async: false,
        dataType: "json",
        type: "POST",
        success: function (data) {
            if (data.isSuccess) {
                $.cookie("cur_role_id", "", { expires: -1 });
                if (data.dataList && !checkValIsUndefinedOrNull(data.dataList.casLoginoutUrl)) {
                    window.location.href = data.dataList.casLoginoutUrl;
                } else {
                    window.location = "Login.html";
                }
            };
        }
    });
};

var cur_role_tid = "";
function get_current_role_tid() {
    if (window.parent.cur_role_tid != undefined && window.parent.cur_role_tid != "") {
        return window.parent.cur_role_tid;
    } else {
        role_tid();
        return cur_role_tid;
    };
};

function role_tid() {
    $.ajax({
        url: "../Handler/CommonHandler.ashx",
        data: { "action": "GetCurrentUserId" },
        async: false,
        dataType: "text",
        type: "POST",
        success: function (data) {
            if (data != null) {
                cur_role_tid = data;
            };
        },
        error: function (err) {
            console.log(err);
        }
    });
};


//任务书提交模式
var cur_task_type = "";
function get_task_type() {
    if (window.parent.cur_task_type != undefined && window.parent.cur_task_type != "") {
        return window.parent.cur_task_type;
    } else {
        tasktype();
        return cur_task_type;
    };
};

function tasktype() {
    $.ajax({
        url: "../Handler/CommonHandler.ashx",
        data: { "action": "GetTaskType" },
        async: false,
        dataType: "text",
        type: "POST",
        success: function (data) {
            if (data != null) {
                cur_task_type = data;
            };
        }
    });
};

//课题提交模式
var cur_project_type = "";
function get_project_type() {
    if (window.parent.cur_project_type != undefined && window.parent.cur_project_type != "") {
        return window.parent.cur_project_type;
    } else {
        projecttype();
        return cur_project_type;
    };
};

function projecttype() {
    $.ajax({
        url: "../Handler/CommonHandler.ashx",
        data: { "action": "GetProjectType" },
        async: false,
        dataType: "text",
        type: "POST",
        success: function (data) {
            if (data != null) {
                cur_project_type = data;
            };
        },
        error: function (err) {
            console.log(err);
        }
    });
};

/**
 * 获取审核状态对应的CSS
 * @param {number} state 
 */
function getAuditCss(state) {
    var auditCss = "";
    $.each(sh,
        function (index, item) {
            if (item.value - 2 == state) {
                auditCss = item.css;
                return false;
            };
        });
    return auditCss;
};

/**
 * 获取审核状态文本，IE8及以下需要引用json2.js
 * @param {number} state
 * @param {number} opeType 参考Model.OperationLogType
 */
function getAuditStateText(state, opeType) {
    var text = "";
    if (state == -1) {
        switch (+opeType) { // ==== 全等号
            case 1: //开题报告
            case 2: //外文译文
            case 3: //指导记录
            case 5: //中期报告
            case 7: //任务书
            case 10://文献综述
            case 14: //中期检查(学院)
            case 15: //中期检查(专业)
            case 16: //中期检查(班级)
                text = "返回修改";
                break;
            default:
                break;
        };
    };

    //用户自定义角色名称
    if (checkValIsUndefinedOrNull(text)) {
        //只找等待审核
        if (state != -1 && state != 1 && state != 1001) {
            var userDefinedRoles = getUserDefinedRoles();
            if (userDefinedRoles && userDefinedRoles.length > 0) {
                var roleState = state;
                if (state == 1000) { //等待管理员审核
                    roleState = 1;
                };
                $.each(userDefinedRoles, function (index, item) {
                    if (item.value == roleState) {
                        text = "等待" + item.name + "审核";
                        return false;
                    };
                });
            };
        };
    };

    //用户没有自定义角色名称
    if (checkValIsUndefinedOrNull(text)) {
        $.each(sh, function (index, item) {
            if (item.value - 2 == state) {
                text = item.name;
                return false;
            }
        });
    };
    return text;
};

function getsubcss(type) {
    var text = "";
    switch (+type) {
        case 0:
            text = "<span class='wd-nosub'>未提交</span>";
            break;
        case 1:
            text = "<span class='txt_green'>已提交</span>";
            break;
        default:
            break;
    };
    return text;
};

function getteacher(type) {
    var text = "";
    switch (+type) {
        case 0:
            text = "<span class='txt_yellow'>等待指导教师确认学生选题</span>";
            break;
        case 1:
            text = "<span class='txt_green'>指导教师确认通过学生选题</span>";
            break;
        case -1:
            text = "<span class='txt_red'>指导教师确认不通过学生选题</span>";
            break;
        default:
            break;
    };
    return text;
};


function getprojetype(type) {
    var text = "";
    switch (+type) {
        case 1:
            text = "师生互选课题";
            break;
        case 2:
            text = "指定学生课题";
            break;
        case 3:
            text = "学生提交课题";
            break;
        case 4:
            text = "团队课题";
            break;
        default:
            break;
    };
    return text;
};

//自定义成绩名称方法
function GetGrade() {
    var name = '';
    $.ajax({
        url: '../Handler/UserHandler.ashx?action=GetScoreNameData',
        type: 'post',
        async: false,
        dataType: 'json',
        data: {
            ScoreID: -1
        },
        success: function (data) {
            if (data.isSuccess) {
                name = data.rows;
            };
        },
        error: function (err) {
            console.log(err);
        }
    });
    return name
};
function GetGradeNames(number, rowsrole) {
    var name = '';
    $.each(rowsrole, function (i, v) {
        if (number == v['自定义编号']) {
            name = v['名称'];
        };
    });
    return name;
};
//自定义名称方法结束

/**
 * 获取角色名称
 * @param {Number} role 角色代码
 */
function getRoleName(role) {
    var roleName = "";
    var userDefinedRoles = getUserDefinedRoles();
    if (userDefinedRoles && userDefinedRoles.length > 0) {
        $.each(userDefinedRoles, function (index, item) {
            if (item.value == role) {
                roleName = item.name;
                return false;
            };
        });
    };
    return roleName;
};

/**
 * 获取当前角色学院编号
*/
var cur_role_academyId = "";
function get_role_academyId() {
    if (window.parent.cur_role_academyId != undefined && window.parent.cur_role_academyId != "") {
        return window.parent.cur_role_academyId;
    } else {
        role_academyId();
        return cur_role_academyId;
    };
};

function role_academyId() {
    $.ajax({
        url: "../Handler/CommonHandler.ashx",
        data: { "action": "GetCurrentAcademyId" },
        async: false,
        dataType: "text",
        type: "POST",
        success: function (data) {
            if (data != null) {
                cur_role_academyId = data;
            };
        }
    });
};

/**
 * 获取附件(有附件时显示/没附件时不显示)
 */
function getAttachment(opeType, projectId, sid, id) {
    $.ajax({
        url: "../Handler/OpenReport.ashx?action=GetAttachent",
        dataType: "json",
        type: "POST",
        data: {
            opeType: opeType,
            projectId: projectId,
            sid: sid,
            id: id
        },
        success: function (data) {
            if (data.isSuccess == true) {
                if (data.rows.length !== 0) {
                    if (userInfo["文件名"] !== "" && data.rows[0]["附件"] !== "") {
                        $("#fujian").show();
                        $("#accessory>span").html(data.rows[0]["文件名"]);
                        $("#accessory>a").attr({ "href": data.rows[0]["附件"], download: data.rows[0]["文件名"] });
                    } else {
                        $("#fujian").hide();
                    };
                };
            };
        }
    });
};

function getAttachmenthisory(opeType, projectId, sid, id, isHistory) {
    $.ajax({
        url: "../Handler/OpenReport.ashx?action=GetAttachent",
        dataType: "json",
        type: "POST",
        data: {
            opeType: opeType,
            projectId: projectId,
            sid: sid,
            id: id,
            isHistory: isHistory
        },
        success: function (data) {
            if (data.isSuccess == true) {
                if (data.rows.length !== 0) {
                    if (data.rows[0]["文件名"] !== "" && data.rows[0]["附件"] !== "") {
                        $("#fujian").show();
                        $("#accessory>span").html(data.rows[0]["文件名"]);
                        $("#accessory>a").attr({ "href": data.rows[0]["附件"], download: data.rows[0]["文件名"] });
                    } else {
                        $("#fujian").hide();
                    };
                };
            };
        }
    });
};

function openstuhistoryfile(opeType, projectId, sid) {
    var text = "";
    switch (opeType) {
        case 1: //开题报告
            text = "开题报告历史纪录";
            break;
        case 2: //外文译文
            text = "外文译文历史纪录";
            break;
        case 5: //中期报告
            text = "中期报告历史纪录";
            break;
        case 10://文献综述
            text = "文献综述历史纪录";
            break;
        default:
            break;
    };
    //是否有历史记录
    $.ajax({
        url: "../Handler/OpenReport.ashx",
        data: {
            "action": "GetStuFileHistory",
            projectId: ktbh,
            sid: sid,
            opeType: opeType
        },
        dataType: "json",
        type: "POST",
        success: function (data) {
            if (data.isSuccess) {
                $("#distorylink").show();
                $("#distorylink").attr({
                    "href": 'javascript:openframe(\'' + text + '\', \'../Student/StuHistoryFile.html?projectId='
                        + projectId + '&sid=' + sid + '&opeType=' + opeType + '\',false)'
                });
            } else {
                $("#distorylink").hide();
            };
        },
        error: function (err) {
            console.log(err);
        }
    });
};

/* 柱状图（非百分比）  */
function echartsBarChart(BarChartID, BarChartX, BarChartY, BarCharTtitle, BarChartLabelX, BarChartLabelY) {
    var chart = document.getElementById('' + BarChartID);
    chart.removeAttribute("_echarts_instance_");
    var barChart = echarts.init(chart);
    var option = {
        title: {
            text: '' + BarCharTtitle,
            x: 'center',//水平安放位置，默认为'left'，可选为：'center' | 'left' | 'right' | {number}（x坐标，单位px）
            y: 'top'//垂直安放位置，默认为top，可选为：'top' | 'bottom' | 'center' | {number}（y坐标，单位px）
        },
        tooltip: {
            trigger: 'axis',
            axisPointer: { // 坐标轴指示器，坐标轴触发有效
                type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
            }
        },
        grid: {
            left: '3%',
            right: '4%',
            bottom: '3%',
            containLabel: true
        },
        toolbox: {
            show: true,
            x: '90%',
            y: '10',
            feature: {
                restore: {},//还原图形
                magicType: {
                    type: ['bar']
                },//多种视图
                saveAsImage: {}//保存图片
            }
        },
        xAxis: [{
            name: '' + BarChartLabelX,
            nameLocation: 'end',
            nameTextStyle: {
                color: 'blue' // 坐标题颜色
            },
            type: 'value',
            // axisLabel: {
            //     show: true,
            //     interval: 'auto',
            //     formatter: '{value} %'
            // },  
            splitLine: {
                show: true
            } //改设置显示不显示坐标区域内的y轴分割线
        }],
        yAxis: [{
            name: '' + BarChartLabelY,
            type: 'category',
            nameTextStyle: {
                color: 'blue' // 坐标题颜色
            },
            data: BarChartY,
            axisTick: {
                alignWithLabel: true
            }
        }],
        series: [{
            name: '课题数',
            type: 'bar',
            barWidth: '60%',
            data: BarChartX,
            animation: true,
            barWidth: 30,//设置柱子的宽度
            //配置样式
            itemStyle: {
                normal: {//通常情况下
                    color: function (params) {//每个柱子的颜色即为colorList数组里的每一项，如果柱子数目多于colorList的长度，则柱子颜色循环使用该数组
                        var colorList = ["#ffc106", "#ff8d0e", "#f5660a", "#e12208", "#a1ad2a", "#6ca13a", "#3c7e36", "#385840", "#529baf", "#2e509d", "#3c329d", "#7e5ccb", "#952278", "#3c87af", "#6ea581", "#bb0a30", "#b19370", "#404c52", "#c17446", "#2aa387", "#48748f"];
                        return colorList[params.dataIndex];
                    },
                    label: {
                        show: true,
                        position: 'right',
                        formatter: '{c}'
                    }
                },
                emphasis: {//鼠标悬停时：
                    shadowBlur: 10,
                    shadowOffsetX: 0,
                    shadowColor: 'rgba(0, 0, 0, 0.5)'
                }
            }
        }]
    };
    barChart.setOption(option, true);
};


/**
 * 柱状图(百分比统计)
 */
function echartsBarChartPercentage(BarChartID, BarChartX, BarChartY, BarCharTtitle, BarChartLabelX, BarChartLabelY) {
    var chart = document.getElementById('' + BarChartID);
    chart.removeAttribute("_echarts_instance_");
    var barChart = echarts.init(chart);
    var option = {
        title: {
            text: '' + BarCharTtitle,
            x: 'center',//水平安放位置，默认为'left'，可选为：'center' | 'left' | 'right' | {number}（x坐标，单位px）
            y: 'top'//垂直安放位置，默认为top，可选为：'top' | 'bottom' | 'center' | {number}（y坐标，单位px）
        },
        tooltip: {
            trigger: 'axis',
            axisPointer: { // 坐标轴指示器，坐标轴触发有效
                type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
            },
            formatter: "{b}<br/>{a} : {c} %"
        },
        grid: {
            left: '2%',
            right: '6%',
            bottom: '3%',
            containLabel: true
        },
        toolbox: {
            show: true,
            x: '90%',
            y: '10',
            feature: {
                restore: {},//还原图形
                magicType: {
                    type: ['bar']
                },//多种视图
                saveAsImage: {}//保存图片
            }
        },
        xAxis: [{
            name: '' + BarChartLabelX,
            nameLocation: 'end',
            nameTextStyle: {
                color: 'blue' // 坐标题颜色
            },
            type: 'value',
            axisLabel: {
                show: true,
                interval: 'auto',
                formatter: '{value} %'
            },
            splitLine: {
                show: true
            } //改设置显示不显示坐标区域内的y轴分割线
        }],
        yAxis: [{
            name: '' + BarChartLabelY,
            type: 'category',
            nameTextStyle: {
                color: 'blue' // 坐标题颜色
            },
            data: BarChartY,
            axisTick: {
                alignWithLabel: true
            }
        }],
        series: [{
            name: '' + BarChartLabelX,
            type: 'bar',
            barWidth: '60%',
            data: BarChartX,
            animation: true,
            //animationEasing: 'elasticOut',
            // animationDelayUpdate: function (idx) {
            //     return idx * 50;
            // },
            barWidth: 30,//设置柱子的宽度
            //配置样式
            itemStyle: {
                normal: {//通常情况下
                    color: function (params) {//每个柱子的颜色
                        var colorList = ["#ffc106", "#ff8d0e", "#f5660a", "#e12208", "#a1ad2a", "#6ca13a", "#3c7e36", "#385840", "#529baf", "#2e509d", "#3c329d", "#7e5ccb", "#952278", "#3c87af", "#6ea581", "#bb0a30", "#b19370", "#404c52", "#c17446", "#2aa387", "#48748f"];
                        return colorList[params.dataIndex];
                    },
                    label: {
                        show: true,
                        position: 'right',
                        formatter: '{c}%'
                    }
                },
                emphasis: {//鼠标悬停时：
                    shadowBlur: 5,
                    shadowOffsetX: 0,
                    shadowColor: 'rgba(0, 0, 0, 0.2)'
                }
            }
        }]
    };
    barChart.setOption(option, true);
};

//折线图(篇数)
function lineChartCount(chertId, lineChartX, lineChartY, title) {
    var myChart = echarts.init(document.getElementById(chertId));
    var option = {
        title: {
            text: title,
            x: 'center'
        },
        // backgroundColor: '#FBFBFB', // 背景颜色
        grid: {
            left: '3%',
            right: '5%',
            bottom: '15%',
            containLabel: true
        },
        tooltip: {
            trigger: 'axis',
            formatter: "{a}<br/>{b} : {c}篇"
        },
        toolbox: {
            show: true,
            x: '90%',
            y: '10',
            dataView: {
                show: true,
                readOnly: true
            },
            feature: {
                restore: {},//还原图形
                magicType: {
                    type: ['funnel', 'line', 'bar']
                },//多种视图
                saveAsImage: {}//保存图片
            }
        },
        //legend: {
        //    data: ['充值', '消费']
        //},
        calculable: true,
        xAxis: [{
            axisLabel: {
                rotate: 30,
                interval: 0,
                //formatter: function (value) {
                //    return value.split("").join("\n");
                //}
            },
            type: 'category',
            boundaryGap: false,
            data: lineChartY
        }],
        yAxis: [{
            type: 'value'
        }],
        series: [{
            name: title,
            type: "line",
            itemStyle: {
                normal: {
                    color: "#66AEDE",
                    lineStyle: {
                        color: "#66AEDE"
                    },
                    label: {
                        show: true,
                        position: 'top',
                        formatter: '{c}篇'
                    }
                }
            },
            smooth: 0.3,
            data: lineChartX
        }]
    };
    myChart.setOption(option);
};

//折线图(百分比)
function lineChartPercent(chertId, lineChartX, lineChartY, title) {
    var myChart = echarts.init(document.getElementById(chertId));
    var option = {
        title: {
            text: title,
            x: 'center'
        },
        grid: {
            left: '3%',
            right: '5%',
            bottom: '15%',
            containLabel: true
        },
        toolbox: {
            show: true,
            x: '90%',
            y: '10',
            dataView: {
                show: true,
                readOnly: true
            },
            feature: {
                restore: {},//还原图形
                magicType: {
                    type: ['line', 'bar']
                },//多种视图
                saveAsImage: {}//保存图片
            }
        },
        // backgroundColor: '#FBFBFB', // 背景颜色
        tooltip: {
            trigger: 'axis',
            formatter: "{a}<br/>{b} : {c}%"
        },
        //legend: {
        //    data: ['充值', '消费']
        //},
        calculable: true,
        xAxis: [{
            axisLabel: {
                rotate: 30,
                interval: 0
            },
            type: 'category',
            boundaryGap: false,
            data: lineChartY
        }],
        yAxis: [{
            type: 'value',
            axisLabel: {
                show: true,
                interval: 'auto',
                formatter: '{value} %'
            },
            show: true
        }],
        series: [{
            name: title,
            type: "line",
            itemStyle: {
                normal: {
                    color: "#66AEDE",
                    lineStyle: {
                        color: "#66AEDE"
                    },
                    label: {
                        show: true,
                        position: 'top',
                        formatter: '{c}%'
                    }
                }
            },
            smooth: 0.3,
            data: lineChartX
        }]
    };
    myChart.setOption(option);
};
//饼状图(百分比;数字)
function echartsPieChart(ChartId, data, title) {
    var chart = document.getElementById('' + ChartId);
    chart.removeAttribute("_echarts_instance_");
    var echartsPie = echarts.init(chart);
    var lableData = [];
    $.each(data, function (i, v) {
        lableData.push(v['name']);
    });
    var option = {
        title: {
            text: title,
            x: 'center'
        },
        tooltip: {
            trigger: 'item',
            formatter: "{a}<br/>{b} : {c} ({d}%)"
        },
        legend: {
            orient: 'vertical',
            x: 'left',
            data: lableData
        },
        toolbox: {
            show: true,
            feature: {
                mark: {
                    show: true
                },
                dataView: {
                    show: true,
                    readOnly: true
                },
                magicType: {
                    show: true,
                    type: ['pie', 'funnel'],
                    option: {
                        funnel: {
                            x: '25%',
                            width: '50%',
                            funnelAlign: 'left',
                            max: 1548
                        }
                    }
                },
                restore: {
                    show: true
                },
                saveAsImage: {
                    show: true
                }
            }
        },
        calculable: true,
        series: [{
            name: title.substring(0, title.length - 3),
            type: 'pie',
            radius: '60%', //饼图的半径大小
            center: ['50%', '60%'], //饼图的位置
            data: data,
            itemStyle: {
                normal: {
                    label: {
                        show: true,
                        formatter: '{b} : {c} \n ({d}%)'
                    },
                    labelLine: {
                        show: true
                    }
                },
                emphasis: {
                    shadowBlur: 10,
                    shadowOffsetX: 0,
                    shadowColor: 'rgba(0, 0, 0, 0.5)'
                }
            }
        }],
        color: ["#ffc106", "#f5660a", "#6ca13a", "#2e509d", "#ff8d0e", "#3c329d", "#7e5ccb", "#952278", "#e12208", "#3c87af", "#6ea581", "#bb0a30", "#a1ad2a", "#b19370", "#404c52", "#3c7e36", "#c17446", "#2aa387", "#385840", "#48748f", "#529baf"]
    };
    echartsPie.setOption(option, true);
};


// 返回检测结果显示html
function returnTestingResult(state, result, resultTxt, time) {
    var jiancejieguo = "";
    if (!checkValIsUndefinedOrNull(state)) {
        if (UrlDecode(state) == 0) {
            if (checkValIsUndefinedOrNull(result)) {
                jiancejieguo = "等待检测中";
            } else {
                jiancejieguo = UrlDecode(resultTxt);
            }
        } else if (UrlDecode(state) == 4) {
            if (checkValIsUndefinedOrNull(result) || result == -0.5) {
                jiancejieguo = "等待导师审核通过后检测";
            } else {
                jiancejieguo = UrlDecode(resultTxt);
            }
        } else if (UrlDecode(state) == 5) {
            jiancejieguo = "等待导师确认后检测";
        } else if (UrlDecode(state) == 3) { // 到期检测
            var time1 = +(new Date());                         //当前时间毫秒数
            var time2 = time;
            time2 = time2.replace(new RegExp("-", "gm"), "/");
            time2 = (new Date(time2)).getTime();        //检测时间毫秒数

            if (time1 > time2) {
                if (checkValIsUndefinedOrNull(result)) {
                    jiancejieguo = "等待检测中";
                } else {
                    jiancejieguo = UrlDecode(resultTxt);
                }
            } else if (time1 <= time2) {
                jiancejieguo = "到期检测<br />" + time;
            }
        } else if (UrlDecode(state) == -3) {
            jiancejieguo = "未提交论文，不检测";
        } else {
            jiancejieguo = "<span class='txt_red'>不检测</span>";
        }
    }
    return jiancejieguo;
};



// 检测结果样式处理
function WarningPicture_Long(copy) {
    if (copy < 0 || copy >= 1000) {
        return GetErrorWords(copy);
    } else {
        if (copy == null) {
            return "";
        } else if (copy >= 50) {
            return "<span class=\"per_r\" title=\"文字复制比\">" + copy + "%</span>";
        } else if (copy >= 40) {
            return "<span class=\"per_o\" title=\"文字复制比\">" + copy + "%</span>";
        } else if (copy > 0) {
            return "<span class=\"per_y\" title=\"文字复制比\">" + copy + "%</span>";
        } else {
            return "<span class=\"per_g\" title=\"文字复制比\">0%</span>";
        };
    };
};

function GetErrorWords(copy) {
    if (copy == -8) {
        return "<span style=\"color:#FF0000\">检测出错</span>";
    } else if (copy == -4) {
        return "<span style=\"color:#666666\">格式不符</span>";
    } else if (copy == -5) {
        return "<span style=\"color:#666666\">读取失败</span>";
    } else if (copy == -6) {
        return "<span style=\"color:#666666\">内容太长</span>";
    } else if (copy == -3) {
        return "<span style=\"color:#666666\">内容过短，不支持检测</span>";
    } else if (copy == -9) {
        return "<span style=\"color:#666666\">未检测</span>";
    } else if (copy == -7) {
        return "<span style=\"color:#666666\">正在解析</span>";
    } else if (copy == -10) {
        return "<span style=\"color:#666666\">文档解析失败</span>";
    } else if (copy == -11) {
        return "<span style=\"color:#666666\">解析失败</span>";
    } else if (copy == 1000) {
        return "<span style=\"color:#666666\">文件保存失败</span>";
    } else if (copy == 1100) {
        return "<span style=\"color:#666666\">内容过短，不支持检测</span>";
    } else if (copy == 1101) {
        return "<span style=\"color:#666666\">内容太长</span>";
    } else if (copy == 1102) {
        return "<span style=\"color:#666666\">格式不符</span>";
    } else if (copy == 1103) {
        return "<span style=\"color:#666666\">文件读取错误</span>";
    } else if (copy == 1104) {
        return "<span style=\"color:#666666\">压缩包部分文件未检测</span>";
    } else if (copy == 1105) {
        return "<span style=\"color:#666666\">压缩包内文件内容获取失败</span>";
    } else if (copy == 1106) {
        return "<span style=\"color:#666666\">未知错误</span>";
    } else if (copy == 1107) {
        return "<span style=\"color:#666666\">剩余检测篇数不足</span>";
    } else if (copy == 1108) {
        return "<span style=\"color:#666666\">今日上传数量已达上限</span>";
    } else if (copy == 1109) {
        return "<span style=\"color:#666666\">未付费文章数量已达上限</span>";
    } else {
        return "<span style=\"color:#FF0000\">处理中</span>";
    };
};

/**
 * 替换 <号为&lt;、 >号为 &gt;
 */
function replaceUnequa(data) {
    if (!checkValIsUndefinedOrNull(data) && !isNumber(data)) {
        if (data.indexOf("<=") >= 0) {
            data = data.replace(/<=/g, "&le;");
        };
        if (data.indexOf(">=") >= 0) {
            data = data.replace(/>=/g, "&ge;");
        };
        if (data.indexOf("<") >= 0) {
            data = data.replace(/</g, "&lt;");
        };
        if (data.indexOf(">") >= 0) {
            data = data.replace(/>/g, "&gt;");
        };
        if (data.indexOf('"') >= 0) {
            data = data.replace(/"/g, "&quot;");
        };
        if (data.indexOf("'") >= 0) {
            data = data.replace(/'/g, "&apos;");
        };
    };
    return data;
};
/**
 * 替换 &lt;号为<、  &gt;号为>
 */
function retrieveUnequa(data) {
    if (!checkValIsUndefinedOrNull(data) && !isNumber(data)) {
        var reg = /<[\s]*script[^>]*>/ig;
        var reg2 = /<[\s]*\/[\s]*script[\s]*>/ig;
        if (data.indexOf("&le;") >= 0) {
            data = data.replace(/&le;/g, "<=");
        };
        if (data.indexOf("&ge;") >= 0) {
            data = data.replace(/&ge;/g, ">=");
        };
        if (data.indexOf("&lt;") >= 0) {
            data = data.replace(/&lt;/g, "<");
        };
        if (data.indexOf("&gt;") >= 0) {
            data = data.replace(/&gt;/g, ">");
        };
        if (data.indexOf("&quot;") >= 0) {
            data = data.replace(/&quot;/g, '"');
        };
        if (data.indexOf("&apos;") >= 0) {
            data = data.replace(/&apos;/g, "'");
        };
        if (reg2.test(data)) {
            data = data.replace(reg2, "");
        };
        if (reg.test(data)) {
            data = data.replace(reg, "");
        };
    };
    return data;
};
/**
 * 替换 <br />为换行符
 */
function retrieveBr(data) {
    if (!checkValIsUndefinedOrNull(data) && !isNumber(data)) {
        data = data.replace(/(<br>)|(<br\/>)|(<br \/>)/g, "\n");
    }
    return data;
};
/**
 * 替换 换行符为<br />
 */
function replaceBr(data) {
    if (!checkValIsUndefinedOrNull(data)) {
        data = data.replace(/(\n\n\n\n)|(\n\n\n)|(\n\n)|\n/g, "<br/>");
    };
    return data;
};

//判断是否在时间范围之内,funModelEnum 1开题报告，2中期报告，3论文，4指导记录，5文献综述，6中英文
function GetSetTimeRs(funModelEnum) {
    var rs = true;
    $.ajax({
        url: "../Handler/SuperAuthority.ashx",
        type: "post",
        dataType: "json",
        async: false,//同步处理
        data: {
            action: "GetSetTimeRs",
            funModelEnum: funModelEnum
        },
        success: function (result) {
            if (result.isSuccess == false) {
                rs = false; //为false的时候说明已经超出了设定时间
            }
        },
        error: function (err) {
            myMessage("获取数据失败");
        }
    });
    return rs;
};


// 审核状态
function getCheckState(opeType, checkedId, academyNum) {
    var xhr = $.ajax({
        url: "../Handler/Project.ashx",
        data: {
            action: "GetAllAuditState",
            opeType: opeType,
            academyNum: academyNum || 0,
        },
        dataType: "json",
        async: false,
        type: "POST",
        success: function (data) {
            if (data.isSuccess == true) {
                data.rows.unshift({ "StateValue": "all", "StateText": "全部", selected: true });
                $("#" + checkedId).combobox({
                    valueField: 'StateValue',
                    textField: 'StateText',
                    data: data.rows
                });
            };
        },
        error: function (err) {
            console.log(err);
        }
    });
    return xhr;
};
// 题目类型和题目来源
function getProTypeAndProSource(type, htmlID) {
    var xhr = $.ajax({
        url: "../Handler/SystemSet.ashx",
        data: {
            action: "GetDictList",
            fenlei: type
        },
        dataType: "json",
        type: "POST",
        success: function (data) {
            if (data.isSuccess == true) {
                data.rows.unshift({ "ID": 0, "名称": "请选择", 'selected': true });
                $("#" + htmlID).combobox({
                    valueField: 'ID',
                    textField: '名称',
                    data: data.rows
                });
            };
        },
        error: function (err) {
            console.log(err);
        }
    });
    return xhr;
};

// 成绩下拉框  selectedID=下拉框 id 
function getScoreSelected(selectedID) {
    $.ajax({
        url: "../Handler/ReviewHandler.ashx",
        data: { "action": "GetSelectScore" },
        dataType: "json",
        type: "POST",
        success: function (data) {
            if (data.isSuccess) {
                $("#" + selectedID).combobox({
                    valueField: 'value',
                    textField: 'text',
                    data: data.rows,
                    onLoadSuccess: function () {
                        $("#" + selectedID).combobox("setValue", data.rows[0]["value"]);
                    }
                });
            };
        },
        error: function (err) {
            console.log(err);
        }
    });
};